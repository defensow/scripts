local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.ScreenGui.Frame
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(35, 35, 35);
G2L["2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["2"]["Size"] = UDim2.new(0, 286, 0, 154);
G2L["2"]["Position"] = UDim2.new(0.5, 0, 0.55121, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.Frame.UIListLayout
G2L["3"] = Instance.new("UIListLayout", G2L["2"]);
G2L["3"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["3"]["Padding"] = UDim.new(0, 10);
G2L["3"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["3"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.ScreenGui.Frame.TextLabel
G2L["4"] = Instance.new("TextLabel", G2L["2"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["TextSize"] = 19;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Text"] = [[Remote Abuse k00lkidd team]];


-- StarterGui.ScreenGui.Frame.TextLabel.UIStroke
G2L["5"] = Instance.new("UIStroke", G2L["4"]);
G2L["5"]["Transparency"] = 0.38;
G2L["5"]["Thickness"] = 3.6;
G2L["5"]["Color"] = Color3.fromRGB(46, 46, 46);


-- StarterGui.ScreenGui.Frame.UIStroke
G2L["6"] = Instance.new("UIStroke", G2L["2"]);
G2L["6"]["Transparency"] = 0.38;
G2L["6"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["6"]["Thickness"] = 3.6;
G2L["6"]["Color"] = Color3.fromRGB(46, 46, 46);


-- StarterGui.ScreenGui.Frame.TextButton
G2L["7"] = Instance.new("TextButton", G2L["2"]);
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextSize"] = 24;
G2L["7"]["TextColor3"] = Color3.fromRGB(142, 142, 142);
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(64, 64, 64);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Text"] = [[Хуярь]];


-- StarterGui.ScreenGui.Frame.TextButton.LocalScript
G2L["8"] = Instance.new("LocalScript", G2L["7"]);



-- StarterGui.ScreenGui.Frame.TextButton.UICorner
G2L["9"] = Instance.new("UICorner", G2L["7"]);



-- StarterGui.ScreenGui.Frame.TextButton.UIStroke
G2L["a"] = Instance.new("UIStroke", G2L["7"]);
G2L["a"]["Transparency"] = 0.38;
G2L["a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["a"]["Thickness"] = 3.6;
G2L["a"]["Color"] = Color3.fromRGB(46, 46, 46);


-- StarterGui.ScreenGui.Frame.TextButton.ImageLabel
G2L["b"] = Instance.new("ImageLabel", G2L["7"]);
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["b"]["Image"] = [[rbxassetid://125939538151218]];
G2L["b"]["Size"] = UDim2.new(0, 29, 0, 29);
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["BackgroundTransparency"] = 1;
G2L["b"]["Position"] = UDim2.new(0.06, 0, 0.2, 0);


-- StarterGui.ScreenGui.Frame.TextButton.ImageLabel.UIAspectRatioConstraint
G2L["c"] = Instance.new("UIAspectRatioConstraint", G2L["b"]);



-- StarterGui.ScreenGui.Frame.TextButton.ImageLabel.LocalScript
G2L["d"] = Instance.new("LocalScript", G2L["b"]);



-- StarterGui.ScreenGui.Frame.TextButton.ImageLabel
G2L["e"] = Instance.new("ImageLabel", G2L["7"]);
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["e"]["Image"] = [[rbxassetid://125939538151218]];
G2L["e"]["Size"] = UDim2.new(0, 29, 0, 29);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["Position"] = UDim2.new(0.79, 0, 0.2, 0);


-- StarterGui.ScreenGui.Frame.TextButton.ImageLabel.UIAspectRatioConstraint
G2L["f"] = Instance.new("UIAspectRatioConstraint", G2L["e"]);



-- StarterGui.ScreenGui.Frame.TextButton.ImageLabel.LocalScript
G2L["10"] = Instance.new("LocalScript", G2L["e"]);



-- StarterGui.ScreenGui.Frame.Frame
G2L["11"] = Instance.new("Frame", G2L["2"]);
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(64, 64, 64);
G2L["11"]["Size"] = UDim2.new(0, 141, 0, 2);
G2L["11"]["Position"] = UDim2.new(0.0542, 0, 0.82143, 0);
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.Frame.Frame.UICorner
G2L["12"] = Instance.new("UICorner", G2L["11"]);



-- StarterGui.ScreenGui.Frame.UICorner
G2L["13"] = Instance.new("UICorner", G2L["2"]);



-- StarterGui.ScreenGui.Frame.TextLabel
G2L["14"] = Instance.new("TextLabel", G2L["2"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextSize"] = 19;
G2L["14"]["TextScaled"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["14"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["BackgroundTransparency"] = 1;
G2L["14"]["Size"] = UDim2.new(0, 200, 0, 9);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Text"] = [[Made by k00lkidd]];
G2L["14"]["Position"] = UDim2.new(0.15035, 0, 0.81494, 0);


-- StarterGui.ScreenGui.Frame.TextLabel.UIStroke
G2L["15"] = Instance.new("UIStroke", G2L["14"]);
G2L["15"]["Transparency"] = 0.38;
G2L["15"]["Thickness"] = 3.6;
G2L["15"]["Color"] = Color3.fromRGB(46, 46, 46);


-- StarterGui.ScreenGui.Frame.UIDrag
G2L["16"] = Instance.new("LocalScript", G2L["2"]);
G2L["16"]["Name"] = [[UIDrag]];


-- StarterGui.ScreenGui.Frame.TextButton.LocalScript
local function C_8()
local script = G2L["8"];
	local function fireAllRemotes(instance)
		for _, child in instance:GetChildren() do
			if child:IsA("RemoteEvent") then
				child:FireServer()
			elseif child:IsA("RemoteFunction") then
				pcall(function()
					child:InvokeServer()
				end)
			end
			
			fireAllRemotes(child)
		end
	end
	
	script.Parent.MouseButton1Click:Connect(function()
		fireAllRemotes(game.ReplicatedStorage)
		fireAllRemotes(game.Workspace)
	end)
	
	
end;
task.spawn(C_8);
-- StarterGui.ScreenGui.Frame.TextButton.ImageLabel.LocalScript
local function C_d()
local script = G2L["d"];
	local image = script.Parent
	
	local rotationspeed = 5
	
	while true do
		image.Rotation += rotationspeed
		task.wait(0.01)
	end
end;
task.spawn(C_d);
-- StarterGui.ScreenGui.Frame.TextButton.ImageLabel.LocalScript
local function C_10()
local script = G2L["10"];
	local image = script.Parent
	
	local rotationspeed = -5
	
	while true do
		image.Rotation += rotationspeed
		task.wait(0.01)
	end
end;
task.spawn(C_10);
-- StarterGui.ScreenGui.Frame.UIDrag
local function C_16()
local script = G2L["16"];
	-- Made by k00lkidd (@defensow) --
	-- Simple UI dragger (PC Only/Any device that has a mouse) --
	
	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end;
task.spawn(C_16);

return G2L["1"], require;
